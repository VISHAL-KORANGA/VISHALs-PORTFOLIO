{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishal\\\\Documents\\\\1.VISHAL\\\\~INTERSHIP_PRODIGY\\\\Task_04\\\\VISHAL-portfolio-react\\\\src\\\\components\\\\ParticleBackground.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport './ParticleBackground.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const particlesRef = useRef([]);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const createParticle = useCallback(canvas => {\n    return {\n      x: Math.random() * canvas.width,\n      y: Math.random() * canvas.height,\n      vx: (Math.random() - 0.5) * 0.5,\n      vy: (Math.random() - 0.5) * 0.5,\n      radius: Math.random() * 2 + 1,\n      opacity: Math.random() * 0.5 + 0.2,\n      life: Math.random() * 100 + 100,\n      maxLife: 200,\n      color: `hsl(${210 + Math.random() * 60}, 70%, ${60 + Math.random() * 20}%)`\n    };\n  }, []);\n  const updateParticle = useCallback((particle, canvas, mouse) => {\n    particle.x += particle.vx;\n    particle.y += particle.vy;\n    particle.life--;\n\n    // Mouse interaction\n    const dx = mouse.x - particle.x;\n    const dy = mouse.y - particle.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance < 100) {\n      const force = (100 - distance) / 100;\n      particle.vx += dx / distance * force * 0.003;\n      particle.vy += dy / distance * force * 0.003;\n    }\n\n    // Boundary wrapping\n    if (particle.x < 0) particle.x = canvas.width;\n    if (particle.x > canvas.width) particle.x = 0;\n    if (particle.y < 0) particle.y = canvas.height;\n    if (particle.y > canvas.height) particle.y = 0;\n\n    // Fade effect\n    particle.opacity = particle.life / particle.maxLife * 0.6;\n    return particle.life > 0;\n  }, []);\n  const drawParticle = useCallback((ctx, particle) => {\n    ctx.save();\n    ctx.globalAlpha = particle.opacity;\n    ctx.beginPath();\n    ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n    ctx.fillStyle = particle.color;\n    ctx.fill();\n    ctx.restore();\n  }, []);\n  const drawConnections = useCallback((ctx, particles) => {\n    const maxDistance = 120;\n    for (let i = 0; i < particles.length; i++) {\n      for (let j = i + 1; j < particles.length; j++) {\n        const dx = particles[i].x - particles[j].x;\n        const dy = particles[i].y - particles[j].y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < maxDistance) {\n          const opacity = (1 - distance / maxDistance) * 0.15;\n          ctx.save();\n          ctx.globalAlpha = opacity;\n          ctx.strokeStyle = '#3B82F6';\n          ctx.lineWidth = 1;\n          ctx.beginPath();\n          ctx.moveTo(particles[i].x, particles[i].y);\n          ctx.lineTo(particles[j].x, particles[j].y);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const setCanvasSize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    setCanvasSize();\n\n    // Initialize particles\n    const particleCount = Math.min(80, Math.floor(canvas.width * canvas.height / 15000));\n    particlesRef.current = Array.from({\n      length: particleCount\n    }, () => createParticle(canvas));\n\n    // Mouse tracking\n    const handleMouseMove = event => {\n      const rect = canvas.getBoundingClientRect();\n      mouseRef.current = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n      };\n    };\n\n    // Animation loop\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Update and draw particles\n      particlesRef.current = particlesRef.current.filter(particle => {\n        if (updateParticle(particle, canvas, mouseRef.current)) {\n          drawParticle(ctx, particle);\n          return true;\n        }\n        return false;\n      });\n\n      // Maintain particle count\n      while (particlesRef.current.length < particleCount) {\n        particlesRef.current.push(createParticle(canvas));\n      }\n\n      // Draw connections\n      drawConnections(ctx, particlesRef.current);\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    // Event listeners\n    const resizeHandler = () => {\n      setCanvasSize();\n      const newParticleCount = Math.min(80, Math.floor(canvas.width * canvas.height / 15000));\n      particlesRef.current = Array.from({\n        length: newParticleCount\n      }, () => createParticle(canvas));\n    };\n    window.addEventListener('resize', resizeHandler);\n    canvas.addEventListener('mousemove', handleMouseMove);\n\n    // Start animation\n    animate();\n\n    // Cleanup\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      window.removeEventListener('resize', resizeHandler);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [createParticle, updateParticle, drawParticle, drawConnections]);\n\n  // JSX Return\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"particle-canvas\",\n    \"aria-hidden\": \"true\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleBackground, \"pnwQYP7ZmWSswZqeY9yHs8R84Ac=\");\n_c = ParticleBackground;\nexport default ParticleBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticleBackground\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","ParticleBackground","_s","canvasRef","animationRef","particlesRef","mouseRef","x","y","createParticle","canvas","Math","random","width","height","vx","vy","radius","opacity","life","maxLife","color","updateParticle","particle","mouse","dx","dy","distance","sqrt","force","drawParticle","ctx","save","globalAlpha","beginPath","arc","PI","fillStyle","fill","restore","drawConnections","particles","maxDistance","i","length","j","strokeStyle","lineWidth","moveTo","lineTo","stroke","current","getContext","setCanvasSize","window","innerWidth","innerHeight","particleCount","min","floor","Array","from","handleMouseMove","event","rect","getBoundingClientRect","clientX","left","clientY","top","animate","clearRect","filter","push","requestAnimationFrame","resizeHandler","newParticleCount","addEventListener","cancelAnimationFrame","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vishal/Documents/1.VISHAL/~INTERSHIP_PRODIGY/Task_04/VISHAL-portfolio-react/src/components/ParticleBackground.jsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport './ParticleBackground.css';\n\nconst ParticleBackground = () => {\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const particlesRef = useRef([]);\n  const mouseRef = useRef({ x: 0, y: 0 });\n\n  const createParticle = useCallback((canvas) => {\n    return {\n      x: Math.random() * canvas.width,\n      y: Math.random() * canvas.height,\n      vx: (Math.random() - 0.5) * 0.5,\n      vy: (Math.random() - 0.5) * 0.5,\n      radius: Math.random() * 2 + 1,\n      opacity: Math.random() * 0.5 + 0.2,\n      life: Math.random() * 100 + 100,\n      maxLife: 200,\n      color: `hsl(${210 + Math.random() * 60}, 70%, ${60 + Math.random() * 20}%)`\n    };\n  }, []);\n\n  const updateParticle = useCallback((particle, canvas, mouse) => {\n    particle.x += particle.vx;\n    particle.y += particle.vy;\n    particle.life--;\n\n    // Mouse interaction\n    const dx = mouse.x - particle.x;\n    const dy = mouse.y - particle.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (distance < 100) {\n      const force = (100 - distance) / 100;\n      particle.vx += (dx / distance) * force * 0.003;\n      particle.vy += (dy / distance) * force * 0.003;\n    }\n\n    // Boundary wrapping\n    if (particle.x < 0) particle.x = canvas.width;\n    if (particle.x > canvas.width) particle.x = 0;\n    if (particle.y < 0) particle.y = canvas.height;\n    if (particle.y > canvas.height) particle.y = 0;\n\n    // Fade effect\n    particle.opacity = (particle.life / particle.maxLife) * 0.6;\n\n    return particle.life > 0;\n  }, []);\n\n  const drawParticle = useCallback((ctx, particle) => {\n    ctx.save();\n    ctx.globalAlpha = particle.opacity;\n    ctx.beginPath();\n    ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n    ctx.fillStyle = particle.color;\n    ctx.fill();\n    ctx.restore();\n  }, []);\n\n  const drawConnections = useCallback((ctx, particles) => {\n    const maxDistance = 120;\n\n    for (let i = 0; i < particles.length; i++) {\n      for (let j = i + 1; j < particles.length; j++) {\n        const dx = particles[i].x - particles[j].x;\n        const dy = particles[i].y - particles[j].y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance < maxDistance) {\n          const opacity = (1 - distance / maxDistance) * 0.15;\n          ctx.save();\n          ctx.globalAlpha = opacity;\n          ctx.strokeStyle = '#3B82F6';\n          ctx.lineWidth = 1;\n          ctx.beginPath();\n          ctx.moveTo(particles[i].x, particles[i].y);\n          ctx.lineTo(particles[j].x, particles[j].y);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n\n    const setCanvasSize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    setCanvasSize();\n\n    // Initialize particles\n    const particleCount = Math.min(80, Math.floor((canvas.width * canvas.height) / 15000));\n    particlesRef.current = Array.from({ length: particleCount }, () => createParticle(canvas));\n\n    // Mouse tracking\n    const handleMouseMove = (event) => {\n      const rect = canvas.getBoundingClientRect();\n      mouseRef.current = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n      };\n    };\n\n    // Animation loop\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Update and draw particles\n      particlesRef.current = particlesRef.current.filter(particle => {\n        if (updateParticle(particle, canvas, mouseRef.current)) {\n          drawParticle(ctx, particle);\n          return true;\n        }\n        return false;\n      });\n\n      // Maintain particle count\n      while (particlesRef.current.length < particleCount) {\n        particlesRef.current.push(createParticle(canvas));\n      }\n\n      // Draw connections\n      drawConnections(ctx, particlesRef.current);\n\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    // Event listeners\n    const resizeHandler = () => {\n      setCanvasSize();\n      const newParticleCount = Math.min(80, Math.floor((canvas.width * canvas.height) / 15000));\n      particlesRef.current = Array.from({ length: newParticleCount }, () => createParticle(canvas));\n    };\n\n    window.addEventListener('resize', resizeHandler);\n    canvas.addEventListener('mousemove', handleMouseMove);\n\n    // Start animation\n    animate();\n\n    // Cleanup\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      window.removeEventListener('resize', resizeHandler);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [createParticle, updateParticle, drawParticle, drawConnections]);\n\n  // JSX Return\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"particle-canvas\"\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default ParticleBackground;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}